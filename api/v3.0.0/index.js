/**
 *  Copyright 2013-14 Ionică Bizău
 *
 *  A Node.JS module, which provides an object oriented wrapper for the Youtube v3 API.
 *  Author: Ionică Bizău <bizauionica@gmail.com>
 *
 **/

var ApiMap = require("./api-map");

/**
 * methodGenerator
 * Generates API methods
 *
 * @name methodGenerator
 * @function
 * @param {String} api The API name (e.g. activities, channelBanners etc)
 * @param {Object} requestOptions The request options that come from API map
 * @return {Function} The function that is generated by passing the API name and request options
 */
function methodGenerator (api, requestOptions) {
    return function (options, callback) {

        // init self
        var self = this;

        // Create request url and clone request options
        var url = Util.createUrl.apply(self, [api, options]);
        var reqOptions = JSON.parse(JSON.stringify(requestOptions));

        // Attach url field for all requests
        requestOptions.url = url;

        // Handle non-GET requests
        switch (requestOptions.method) {
            case "POST":
                console.warn("Not yet implemented");
                break;
            case "PUT":
                console.warn("Not yet implemented");
                break;
            case "DELETE":
                console.warn("Not yet implemented");
                break;
        }

        // Run request
        self.Client.request(reqOptions, callback);
    };
}

module.exports = function () {
    var self = this;
    for (var api in ApiMap) {
        var cApi = ApiMap[api];
        this[api] = this[api] || {};
        for (var me in cApi.methods) {
            var cMethod = cApi.methods[me];
            this[apis[i]] = api;
            this[apis[i]].Client = self;
        }
    }
};
